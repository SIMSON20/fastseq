# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/21_models.cnn.transforms.ipynb (unless otherwise specified).

__all__ = ['prep_data']

# Cell
from fastai2.torch_basics import *
from fastai2.data.all import *
# from pyts.image import GramianAngularField, MarkovTransitionField, RecurrencePlot

# Cell
def prep_data(cmap='rainbow', method='GASF', image_size=224):
    for phase in ['TRAIN','TEST']:
        if graph:
            graph_ts(ts)
        labels = df.target.unique()
        if method == 'GAF':
            transformer = GASF(image_size=image_size)
        elif method == 'MTF':
            transformer = MTF(image_size=image_size)
        elif method == 'RP':
            transformer = RecurrencePlots(dimension=1, epsilon=None, percentage=10)
        else:
            method = 'Unaltered'
        method_path = path/f'{method}'
        method_path.mkdir(exist_ok=True)
        phase_path = method_path/f'{phase}'
        phase_path.mkdir(exist_ok=True)
        if method != 'Unaltered':
            image_data = transformer.fit_transform(df[df.columns[:-1]])
            image_data = resize(image_data, (image_data.shape[0],image_size,image_size))
            for label in labels:
                label_path = phase_path/f'{label}'
                label_path.mkdir(exist_ok=True)
                sub_df = df[df.target == label]
                idxs = sub_df.index
                for idx in idxs:
                    plt.imsave(label_path/f'{idx}.png', image_data[idx], cmap=cmap)
    return None